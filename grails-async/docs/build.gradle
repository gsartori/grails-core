import grails.doc.gradle.PublishGuide

plugins {
    id 'base'
}

configurations.register('groovydocRuntimeOnly')

dependencies {
    implementation platform("org.grails:grails-bom:${grailsVersion}")
    groovydocRuntimeOnly localGroovy()
}

tasks.withType(Groovydoc).configureEach {
    group = 'documentation'
    access = GroovydocAccess.PROTECTED
    processScripts = false
    includeMainForScripts = false
    includeAuthor = true
    classpath = configurations.groovydocRuntimeOnly
    groovyClasspath = configurations.groovydocRuntimeOnly
}

tasks.register('apiDocs', Groovydoc) {

    docTitle = "Grails Async $version"

    def projectNames = [
        'grails-async-core', 'grails-async-gpars', 'grails-async-rxjava', 'grails-async-rxjava2',
        'grails-events-compat', 'grails-events-core', 'grails-events-gpars', 'grails-events-rxjava',
        'grails-events-rxjava2', 'grails-events-spring', 'grails-events-transform',
        'grails-plugin-async', 'grails-plugin-events'
    ]

    def projects = rootProject.allprojects.findAll { it.name in projectNames }
    source projects.collect { it.layout.projectDirectory.dir('src/main/groovy') }
    destinationDir = layout.buildDirectory.dir('docs/api').get().asFile
}

tasks.register('generateGuide', PublishGuide) {

    group = 'documentation'
    dependsOn = ['apiDocs', 'compileGroovy', 'compileTestGroovy', 'jar', 'test', 'processTestResources' ]

    targetDir = project.layout.buildDirectory.dir('docs').get().asFile
    sourceRepo = "https://github.com/${githubSlug}/edit/${githubBranch}/src/main/docs"
    sourceDir = project.layout.projectDirectory.dir('src/main/docs').asFile
    propertiesFiles = [
        rootProject.layout.projectDirectory.file('gradle.properties').asFile
    ]
    asciidoc = true
    resourcesDir = project.layout.projectDirectory.dir('src/main/docs/resources').asFile
    it.properties = [
            'safe'     : 'UNSAFE',
            'version'  : project.version,
            'api'      : '../api',
            'sourcedir': rootProject.layout.projectDirectory.asFile,
            'javaee'   : 'https://docs.oracle.com/javaee/7/api/',
            'javase'   : 'https://docs.oracle.com/en/java/javase/11/docs/api/',
            'groovyapi': "https://docs.groovy-lang.org/${project['groovy.version']}/html/gapi/",
            'grailsapi': "https://docs.grails.org/${grailsVersion}/api/",
            'gormapi'  : "https://gorm.grails.org/${project['grails-datastore.version']}/api/",
            'springapi': "https://docs.spring.io/spring/docs/${project['spring-framework.version']}/javadoc-api/"
    ]
    doLast {
        def dir = project.layout.buildDirectory.dir('docs').get().asFile
        ant.invokeMethod('move', [
            file: "${dir}/guide/single.html",
            tofile: "${dir}/guide/index.html",
            overwrite: true
        ])
        new File(dir, 'index.html').text = """
            <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
            <html lang="en">
            <head>
            <title>Grails Async $version</title>
            <meta http-equiv="refresh" content="0; url=guide/index.html" />
            </head>
            <body>
            </body>
            </html>
        """.stripIndent()
    }
}

tasks.register('docs') {
    group = 'documentation'
    dependsOn 'apiDocs', 'generateGuide'
}

tasks.named('build') {
    finalizedBy 'docs'
}
